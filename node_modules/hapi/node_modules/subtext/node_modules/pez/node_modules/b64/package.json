{
  "name": "b64",
  "description": "Base64 streaming encoder and decoder",
  "version": "3.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/b64"
  },
  "main": "lib/index.js",
  "keywords": [
    "buffer",
    "base64",
    "decode",
    "encode",
    "stream"
  ],
  "engines": {
    "node": ">=4.0.0"
  },
  "dependencies": {},
  "devDependencies": {
    "code": "3.x.x",
    "lab": "10.x.x",
    "wreck": "8.x.x"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "license": "BSD-3-Clause",
  "readme": "Base64 streaming encoder and decoder\r\n\r\n[![Build Status](https://secure.travis-ci.org/hapijs/b64.png)](http://travis-ci.org/hapijs/b64)\r\n\r\nLead Maintainer - [Wyatt Preul](https://github.com/geek)\r\n\r\n\r\n## Installation\r\n\r\n```sh\r\nnpm install b64 --save\r\n```\r\n\r\n\r\n## API\r\n\r\n### encode(buffer)\r\n\r\nBase64 encode the buffer and return it as a new Buffer.\r\n\r\n\r\n### decode(buffer)\r\n\r\nBase64 decode the buffer and return the result as a new buffer.\r\n\r\n\r\n### Encoder\r\n\r\nTransform stream that base64 encodes each chunk of the stream.\r\n\r\nExample:\r\n\r\n```js\r\n'use strict';\r\n\r\nconst Fs = require('fs');\r\nconst B64 = require('b64');\r\n\r\nconst stream = Fs.createReadStream(`${__dirname}/package.json`);\r\nconst encoder = new B64.Encoder();\r\n\r\nstream.pipe(encoder).pipe(process.stdout);\r\n```\r\n\r\n\r\n### Decoder\r\n\r\nTransform stream that base64 decodes each chunk of the stream.\r\n\r\nExample:\r\n\r\n```js\r\n'use strict';\r\n\r\nconst Fs = require('fs');\r\nconst B64 = require('b64');\r\n\r\nconst stream = Fs.createReadStream(`${__dirname}/encodedfile.b64`);\r\nconst decoder = new B64.Decoder();\r\n\r\nstream.pipe(decoder).pipe(process.stdout);\r\n```\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hapijs/b64/issues"
  },
  "_id": "b64@3.0.2",
  "_from": "b64@3.x.x"
}
